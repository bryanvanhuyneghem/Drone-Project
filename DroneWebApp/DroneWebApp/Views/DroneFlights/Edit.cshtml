@model DroneWebApp.Models.DroneFlight

@{
    ViewBag.Title = "Edit Drone Flight";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<h2 class="textAlignCenter">Edit Drone Flight @Model.FlightId</h2>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "DroneFlights")">Drone Flights</a></li>
        <li class="breadcrumb-item active" aria-current="page">Edit Drone Flight @Model.FlightId</li>
    </ol>
</nav>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.FlightId)

        <div class="form-group">
            <label class="control-label col-md-2">Project<span class="redBrightText">*</span></label>
            <div class="col-md-10">
                @Html.DropDownList("ProjectId", null, "Select Project", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-offset-2 col-md-10">
                Leave location blank to automatically generate this field when uploading the correct files.
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Date</label>
            <div class="col-md-10">
                @{
                    string str = "";
                    if (@Model.Date != null)
                    {
                        str = ((DateTime)@Model.Date).ToString("yyyy-MM-dd");
                    }
                }
                @Html.TextBoxFor(model => model.Date, new { @type = "date", @class = "btn btn-info", @Value = @str })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>
            
        <div class="form-group">
            <label class="control-label col-md-2">Drone<span class="redBrightText">*</span></label>
            <div class="col-md-10">
                @Html.DropDownList("DroneId", null, "Select Drone", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DroneId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Pilot<span class="redBrightText">*</span></label>
            <div class="col-md-10">
                @Html.DropDownList("PilotId", null, "Select Pilot", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PilotId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TypeOfActivity, "Type of Activity", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TypeOfActivity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TypeOfActivity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Other, "Other", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Other, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Other, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Simulator, "Simulator", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Simulator, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Simulator, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Instructor, "Instructor", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Instructor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Instructor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Remarks, new { maxlength = 2000, height = "400", width = "400" })
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="redBrightText">* required</div>
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Drone Flights List", "Index", null, new { @class = "btn btn-primary btn-sm" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}